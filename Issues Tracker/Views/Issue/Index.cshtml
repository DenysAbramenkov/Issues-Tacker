@model Issues_Tracker.Models.IssuePrioritiesList


@{
    ViewBag.Title = "List of Issues for the Project";
}

    <h2>List of Issues for the Project</h2>

    <form>
        <div class="form-group">
            <p>
                Project name: <input type="text" name="projectName" method="get">
                <br />
            </p>
            <p>
                Filter by Priority: @Html.DropDownList("priority", Model.Priorityes, "All")
                <br />
            </p>
            <p>
                <input class="btn btn-outline-info" asp-controller="Issue" asp-action="Index" type="submit" value="Filter" />
                <br />
            </p>
        </div>
    </form>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].Summary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].Descripton)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].User)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Issues)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Summary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripton)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Name)
                </td>
                <td>
                   <a href="#" class="btn btn-info" onclick="AddEditIssue(@item.Id)">Edit</a> 
                   @*<a href="#" class="btn btn-danger" onclick="DeleteIssue(@item.Id)">Delete</a>*@ 
                </td>
            </tr>
        }
  </table>

    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="deletelLabel" data-show="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteLabel">Are you sure?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="AddEditModalbody">
                     
                </div>
            </div>
        </div>
    </div>
    
    <button type="button" onclick="AddEditIssue(0)" class="btn btn-success">
        Add
    </button>

<script>
    var AddEditIssue = function (issId) {
        $.ajax({
            url: "/Issue/AddEditIssue",
            type: "GET",
            data: { issueId: issId },
            success: function (result) {
                $('#AddEditModalbody').html(result);
                $('#editModal').modal('show');
            },
            error: function() {
            alert("There is some problem in the service!")
        }
        });
    }
</script>