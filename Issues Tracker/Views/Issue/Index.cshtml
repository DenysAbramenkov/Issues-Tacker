@model Issues_Tracker.Models.IssuePrioritiesList


@{
    ViewBag.Title = "List of Issues for the Project";
}

<h2>List of Issues for the Project</h2>

<form role="form">
    <div class="form-group">
        <div class="container-fluid" style="width:100%">
            <br />
            <div class="row">
                <div class="col-md-6">
                <h4>
            Project name:
            </h4>
                </div>

                <div class="col-md-6">
                    <h4>
                     Filter by Priority:
                    </h4>
                </div>
            </div>
            <br/>
            <div class="row">
                <div  class="col-md-6">
                    <input style="max-width:none" type="text" class="form-control" name="projectName" method="get">
                </div>
                <div  class="col-md-6">
                    @Html.DropDownList("priority", Model.Priorityes, "All", new { @class = "form-control", @style = "max-width:none" })
                </div>
            </div>
            <br />
            <input class="btn btn-primary" width="300" asp-controller="Issue" asp-action="Index" type="submit" value="Filter" />
            <br />
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped table-responsive">
        <thead class="thead-dark">
            <tr>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Issues[0].Number)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Issues[0].Summary)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Issues[0].Descripton)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Issues[0].Priority)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Issues[0].Project)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Issues[0].State)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Issues[0].User)
                </th>
                <th></th>
            </tr>
        </thead>
        @foreach (var item in Model.Issues)
            {
            <tr class="align-center">
                <td>
                    @Html.DisplayFor(modelItem => item.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Summary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripton)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Name)
                </td>
                <td>
                    <a href="#" class="btn btn-default" onclick="AddEditIssue(@item.Id)">Edit</a>
                </td>
            </tr>
        }
    </table>

</div>

    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="deletelLabel" data-show="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modalHeaderlabe">Add or delete Issue</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body" id="AddEditModalbody">
                </div>
            </div>
        </div>
    </div>
    <div>
        <button style="float: right; margin-right:70px; margin-top:15px;" type="button" onclick="AddEditIssue(0)" class="btn btn-primary">
            Create
        </button>
    </div>

    <script>
        var AddEditIssue = function (issId) {
            $.ajax({
                url: "/Issue/AddEditIssue",
                type: "GET",
                data: { issueId: issId },
                success: function (result) {
                    $('#AddEditModalbody').html(result);
                    $('#editModal').modal('show');
                },
                error: function () {
                    alert("There is some problem in the service!")
                }
            });
        }
    </script>

